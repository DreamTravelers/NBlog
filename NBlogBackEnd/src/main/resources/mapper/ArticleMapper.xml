<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nblog.dao.ArticleDao">
    <insert id="addDraft"  parameterType="com.nblog.entity.Draft">
        INSERT INTO
            tb_draft (
                user_id,
                title,
                content,
                tags,
                scope,
                create_time,
                update_time
            )
        VALUES (
                #{userId},
                #{title},
                #{content},
                #{tags},
                #{scope},
                NOW(),
                NOW()
            )
    </insert>
    <insert id="addArticle" parameterType="com.nblog.entity.Article" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
            tb_article (
                user_id,
                article_title,
                article_content,
                article_desc,
                article_tags,
                status,
                create_time,
                update_time,
                img
            )
        VALUES (
                #{userId},
                #{articleTitle},
                #{articleContent},
                #{articleDesc},
                #{articleTags},
                #{status},
                NOW(),
                NOW(),
                #{img}
            )
    </insert>
    <update id="updateArticlePath">
        UPDATE
            tb_article
        SET
            article_content=#{path}
        WHERE
            id=#{aid}
    </update>
    <update id="deleteArticle">
        UPDATE
            tb_article
        SET
            is_delete=1
        WHERE
            id=#{aid}
    </update>
    <update id="reEditorSubmit">
        UPDATE
            tb_article
        SET
            article_title = #{articleTitle},
            article_desc = #{articleDesc},
            `status` = #{status},
            article_tags = #{articleTags},
            is_delete = 0,
            update_time = NOW(),
            img = #{img}
        WHERE
            id=#{userId}
    </update>
    <update id="deleteDraft">
        UPDATE
            tb_draft
        SET
            status = 0
        WHERE
            id =#{did}
    </update>

    <select id="getTotalArticleCount" resultType="java.lang.Integer">
        SELECT
            count(*)
        FROM
            tb_article as a
        WHERE
            a.is_delete = 0 and a.status = 1
    </select>

    <select id="getArticlesByPagination" resultType="com.nblog.vo.ArticlePageVO">
        SELECT
            a.id id,
            a.user_id,
            u.`name` author,
            a.article_title title,
            a.article_desc `desc`,
            a.article_tags tags,
            a.is_top ,
            a.create_time,
            a.update_time,
            img
        FROM
            tb_article AS a ,
            tb_user_info AS u
        WHERE
            a.user_id=u.id and a.is_delete = 0 and a.status = 1
        ORDER BY
            a.is_top desc, a.id desc
        LIMIT
            #{page},#{limit}
    </select>
    <select id="getArticleDetailsByID" resultType="com.nblog.dto.ArticleDetailsDTO">
        SELECT
            a.user_id author_id,
            u.`name` `name`,
            a.article_title title,
            a.article_content content,
            a.article_tags tags,
            a.create_time,
            a.update_time
        FROM
            tb_article AS a ,
            tb_user_info AS u
        WHERE
            a.user_id=u.id and a.id = #{id}
        Limit 1
    </select>
    <select id="getScopeByID" resultType="java.lang.Integer">
        SELECT
            `status`
        FROM
            tb_article
        WHERE
            id = #{aid}
    </select>
    <select id="getPrintDetails" resultType="com.nblog.dto.PrintDTO">
        SELECT
            (SELECT `name` FROM tb_user_info u WHERE u.id = a.user_id) author,
            article_tags tags,
            (SELECT title FROM tb_dir d WHERE d.id = a.article_dir) dir
        FROM
            tb_article a
        WHERE a.id = #{aid}
    </select>
    <select id="getRePublishArticle" resultType="com.nblog.dto.ArticleDetailsDTO">
        SELECT
            id,
            user_id author_id,
            article_title title,
            article_content content,
            article_tags tags,
            `status` scope
        FROM
            tb_article
        where
            id=#{aid}
    </select>
    <select id="getRecommendArticle" resultType="com.nblog.dto.DirDTO">
        SELECT
            id,
            article_title name
        FROM
            tb_article
        WHERE
            id in
            <foreach collection="aids" index="index" item="item" open="("
                     separator="," close=")">
                #{item}
            </foreach>
    </select>
    <select id="getAllDraft" resultType="com.nblog.dto.DraftDTO">
        SELECT
            id,
            title,
            update_time
        FROM
            tb_draft
        WHERE
            user_id=#{user} AND status = 1
        ORDER BY update_time DESC
    </select>
    <select id="getReDraftInfo" resultType="com.nblog.entity.Draft">
        SELECT
            *
        FROM
            tb_draft
        WHERE
            id=#{aid}
    </select>
    <select id="getEchartsDataByMonth" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM
            tb_article
        WHERE
            user_id = #{user} AND (create_time LIKE CONCAT(#{month},'%')) AND is_delete = 0
    </select>
    <select id="getEchartsDataByYear" resultType="java.lang.Integer">
        SELECT
            COUNT(*)
        FROM
            tb_article
        WHERE
            user_id = #{user} AND (create_time LIKE CONCAT(#{year},'%')) AND is_delete = 0
    </select>
    <select id="getPublishedByUser" resultType="com.nblog.dto.ArticleDTO">
        SELECT
            id,
            article_title title,
            update_time create_time
        FROM
            tb_article
        WHERE user_id=#{id} AND is_delete=0 AND status!=2
        ORDER BY update_time DESC
    </select>
</mapper>